name: terraform-apply
on:
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  TF_IN_AUTOMATION: "true"
  ARM_USE_OIDC: "true"

jobs:
  apply:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # (Optional) Just show az version before login
      - name: Azure CLI version
        run: az version

      - name: Azure login
        uses: azure/login@v2
        with:
          client-id:       ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id:       ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.5

      # ----- BOOTSTRAP BACKEND (idempotent) -----
      - name: Terraform init (bootstrap)
        working-directory: terraform/backend-bootstrap
        run: terraform init

      - name: Terraform apply (bootstrap; stable names)
        working-directory: terraform/backend-bootstrap
        run: |
          terraform apply -auto-approve \
            -var "location=${{ vars.TF_LOCATION || 'westeurope' }}" \
            -var "backend_resource_group=${{ vars.BACKEND_RG }}" \
            -var "backend_storage_account=${{ vars.BACKEND_SA }}" \
            -var "backend_container=${{ vars.BACKEND_CN }}" \
            -var "backend_key=${{ vars.BACKEND_KEY }}" \
            -var "sp_client_id=${{ secrets.AZURE_CLIENT_ID }}"

      # ----- MAIN (with remote backend) -----
      - name: Terraform init (main with backend)
        working-directory: terraform
        run: |
          terraform init \
            -backend-config="resource_group_name=${{ vars.BACKEND_RG }}" \
            -backend-config="storage_account_name=${{ vars.BACKEND_SA }}" \
            -backend-config="container_name=${{ vars.BACKEND_CN }}" \
            -backend-config="key=${{ vars.BACKEND_KEY }}"

      - name: Terraform plan
        working-directory: terraform
        run: |
          terraform plan \
            -var "location=${{ vars.TF_LOCATION || 'westeurope' }}" \
            -var "vm_admin_username=${{ vars.VM_ADMIN_USERNAME || 'azureuser' }}" \
            -var "ssh_public_key_data=${{ secrets.SSH_PUBLIC_KEY }}"

      - name: Terraform apply (main)
        working-directory: terraform
        run: |
          terraform apply -auto-approve \
            -var "location=${{ vars.TF_LOCATION || 'westeurope' }}" \
            -var "vm_admin_username=${{ vars.VM_ADMIN_USERNAME || 'azureuser' }}" \
            -var "ssh_public_key_data=${{ secrets.SSH_PUBLIC_KEY }}"

      - name: Show outputs
        working-directory: terraform
        run: terraform output
