name: terraform-apply
on:
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  TF_IN_AUTOMATION: "true"

jobs:
  apply:
    runs-on: ubuntu-latest
    env:
      # Terraform azurerm provider creds (read from JSON secret)
      ARM_CLIENT_ID:       ${{ fromJSON(secrets.AZURE_CREDENTIALS).clientId }}
      ARM_CLIENT_SECRET:   ${{ fromJSON(secrets.AZURE_CREDENTIALS).clientSecret }}
      ARM_TENANT_ID:       ${{ fromJSON(secrets.AZURE_CREDENTIALS).tenantId }}
      ARM_SUBSCRIPTION_ID: ${{ fromJSON(secrets.AZURE_CREDENTIALS).subscriptionId }}

    steps:
      - uses: actions/checkout@v4

      - name: Azure login (client secret)
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.5

      # ---------- BOOTSTRAP BACKEND (idempotent) ----------
      - name: Terraform init (bootstrap)
        working-directory: terraform/backend-bootstrap
        run: terraform init -input=false -no-color

      - name: Terraform apply (bootstrap; stable names)
        working-directory: terraform/backend-bootstrap
        run: |
          terraform apply -auto-approve -input=false -no-color -lock-timeout=5m \
            -var "location=${{ vars.TF_LOCATION || 'westeurope' }}" \
            -var "backend_resource_group=${{ vars.BACKEND_RG }}" \
            -var "backend_storage_account=${{ vars.BACKEND_SA }}" \
            -var "backend_container=${{ vars.BACKEND_CN }}" \
            -var "backend_key=${{ vars.BACKEND_KEY }}" \
            -var "sp_client_id=${{ fromJSON(secrets.AZURE_CREDENTIALS).clientId }}"

      # ---------- MAIN (remote state) ----------
      - name: Terraform init (main with backend)
        working-directory: terraform
        run: |
          terraform init -input=false -no-color -lock-timeout=5m \
            -backend-config="resource_group_name=${{ vars.BACKEND_RG }}" \
            -backend-config="storage_account_name=${{ vars.BACKEND_SA }}" \
            -backend-config="container_name=${{ vars.BACKEND_CN }}" \
            -backend-config="key=${{ vars.BACKEND_KEY }}"

      - name: Terraform plan
        working-directory: terraform
        run: |
          terraform plan -input=false -no-color -lock-timeout=5m \
            -var "location=${{ vars.TF_LOCATION || 'westeurope' }}" \
            -var "vm_admin_username=${{ vars.VM_ADMIN_USERNAME || 'azureuser' }}" \
            -var "ssh_public_key_data=${{ secrets.SSH_PUBLIC_KEY }}"

      - name: Terraform apply (main)
        working-directory: terraform
        run: |
          terraform apply -auto-approve -input=false -no-color -lock-timeout=5m \
            -var "location=${{ vars.TF_LOCATION || 'westeurope' }}" \
            -var "vm_admin_username=${{ vars.VM_ADMIN_USERNAME || 'azureuser' }}" \
            -var "ssh_public_key_data=${{ secrets.SSH_PUBLIC_KEY }}"

      - name: Show outputs
        working-directory: terraform
        run: terraform output -no-color
