# Managed by Ansible

events {}

http {
  # Let nginx resolve container names (inside the nginx container this works)
  resolver 127.0.0.11 ipv6=off valid=30s;

  # Preserve proto even if header is missing
  map $http_x_forwarded_proto $x_forwarded_proto {
    default $http_x_forwarded_proto;
    ""      $scheme;
  }

  # Redirect HTTP -> HTTPS
  server {
    listen 80;
    server_name {{ vm_ip }};
    return 301 https://$host$request_uri;
  }

  server {
    listen 443 ssl;
    server_name {{ vm_ip }};

    ssl_certificate     /etc/x509/https/tls.crt;
    ssl_certificate_key /etc/x509/https/tls.key;

    # ---- oauth2-proxy endpoints ----
    location /oauth2/ {
      proxy_pass         http://oauth2-proxy:4180;
      proxy_http_version 1.1;
      proxy_set_header   Host              $host;
      proxy_set_header   X-Real-IP         $remote_addr;
      proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header   X-Forwarded-Host  $host;
      proxy_set_header   X-Forwarded-Proto $x_forwarded_proto;
      proxy_set_header   X-Request-URI     $request_uri;
      proxy_set_header   X-Auth-Request-Redirect $request_uri;
    }

    # Auth subrequest used by auth_request
    location = /oauth2/auth {
      internal;
      proxy_pass         http://oauth2-proxy:4180/oauth2/auth;
      proxy_set_header   Content-Length    "";
      proxy_set_header   X-Original-URI    $request_uri;
      proxy_set_header   X-Real-IP         $remote_addr;
      proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header   X-Forwarded-Host  $host;
      proxy_set_header   X-Forwarded-Proto $x_forwarded_proto;
    }

    # ---- Protected static site ----
    location / {
      auth_request /oauth2/auth;
      error_page 401 = @oauth2_signin;

      # Optional headers from oauth2-proxy
      auth_request_set $user  $upstream_http_x_auth_request_user;
      add_header X-Authenticated-User $user always;

      root   /usr/share/nginx/html;
      index  index.html;
      try_files $uri $uri/ =404;
    }

    location @oauth2_signin {
      return 302 /oauth2/start?rd=$scheme://$host$request_uri;
    }
  }
}
